---
# jenkins.io

- apt_key:
    id: D50582E6
    url: http://pkg.jenkins-ci.org/debian/jenkins-ci.org.key
  remote_user: root
  when: ansible_os_family == 'Debian'

- apt_repository:
    repo: 'deb http://pkg.jenkins-ci.org/debian-stable binary/'
    filename: jenkins
  remote_user: root
  when: ansible_os_family == 'Debian'

- apt:
    name: jenkins
  remote_user: root
  when: ansible_os_family == 'Debian'

- homebrew:
    name: jenkins
  when: ansible_system == 'Darwin'

# TODO: Sleep only if just installed.
- shell: sleep 30
  remote_user: root
  when: ansible_os_family == 'Debian'

- stat:
    path: /var/lib/jenkins/secrets/initialAdminPassword
  remote_user: root
  register: check_password_file

- shell: cat /var/lib/jenkins/secrets/initialAdminPassword
  register: initial_admin_password
  remote_user: root
  when: ansible_os_family == 'Debian' and check_password_file.stat.exists

- jenkins_script:
    script: "{{ lookup('file', 'templates/change-password.txt') }}"
    args:
      jenkins_admin_password: '{{ jenkins.admin.password }}'
    user: admin
    password: '{{ initial_admin_password.stdout }}'
  remote_user: root
  when: ansible_os_family == 'Debian' and check_password_file.stat.exists

- jenkins_script:
    script: "{{ lookup('file', 'templates/complete-setup.txt') }}"
    user: admin
    password: '{{ jenkins.admin.password }}'
  notify:
  - restart continuous integration service
  remote_user: root
  when: ansible_os_family == 'Debian' and check_password_file.stat.exists

- file:
    path: /var/lib/jenkins/secrets/initialAdminPassword
    state: absent
  remote_user: root
  when: ansible_os_family == 'Debian'

- jenkins_plugin:
    name: ldap
    url_username: '{{ jenkins.admin.username }}'
    url_password: '{{ jenkins.admin.password }}'
  notify:
  - restart continuous integration service
  remote_user: root
  when: ansible_os_family == 'Debian'

# TODO: What is the replacement?
#- jenkins_plugin:
#    name: checkstyle
#    url_username: '{{ jenkins.admin.username }}'
#    url_password: '{{ jenkins.admin.password }}'
#  notify:
#  - restart continuous integration service
#  remote_user: root
#  when: ansible_os_family == 'Debian'

- jenkins_plugin:
    name: htmlpublisher
    url_username: '{{ jenkins.admin.username }}'
    url_password: '{{ jenkins.admin.password }}'
  notify:
  - restart continuous integration service
  remote_user: root
  when: ansible_os_family == 'Debian'

- systemd:
    name: jenkins
    state: started
    enabled: yes
  remote_user: root
  when: ansible_os_family == 'Debian' and jenkins.enabled

- systemd:
    name: jenkins
    state: stopped
    enabled: no
  remote_user: root
  when: ansible_os_family == 'Debian' and not jenkins.enabled
